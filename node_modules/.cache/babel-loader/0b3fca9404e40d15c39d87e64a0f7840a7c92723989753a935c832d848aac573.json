{"ast":null,"code":"/**\n * Sistema de IA para Triagem Médica\n * Baseado no Sistema Manchester de Classificação de Risco\n * 5 níveis de prioridade conforme protocolo hospitalar\n */\n\n// Definição dos níveis de prioridade\nexport const NIVEIS_PRIORIDADE = {\n  VERMELHO: {\n    cor: 'vermelho',\n    significado: 'Emergência absoluta',\n    tempo: 'Imediato',\n    tempoEstimado: '00:00',\n    exemplo: 'Parada cardíaca, falta de ar grave, sangramento intenso, perda de consciência',\n    peso: 5\n  },\n  LARANJA: {\n    cor: 'laranja',\n    significado: 'Muito urgente',\n    tempo: 'Até 10 min',\n    tempoEstimado: '10:00',\n    exemplo: 'Dor no peito forte, AVC em andamento, fratura exposta, queimadura grave',\n    peso: 4\n  },\n  AMARELO: {\n    cor: 'amarelo',\n    significado: 'Urgente moderado',\n    tempo: 'Até 50 min',\n    tempoEstimado: '50:00',\n    exemplo: 'Febre alta com mal-estar, dor intensa mas estável, pequenos cortes com sangramento controlado',\n    peso: 3\n  },\n  VERDE: {\n    cor: 'verde',\n    significado: 'Pouco urgente',\n    tempo: 'Até 2 horas',\n    tempoEstimado: '120:00',\n    exemplo: 'Dor leve, sintomas gripais, pequenas torções',\n    peso: 2\n  },\n  AZUL: {\n    cor: 'azul',\n    significado: 'Não urgente',\n    tempo: 'Até 4 horas',\n    tempoEstimado: '240:00',\n    exemplo: 'Pedido de receita, curativo simples, consulta de acompanhamento',\n    peso: 1\n  }\n};\n\n// Palavras-chave categorizadas por nível de emergência\nconst PALAVRAS_CHAVE = {\n  // VERMELHO - Emergência absoluta\n  vermelho: [\n  // Cardiovascular crítico\n  'parada cardíaca', 'infarto', 'infarto agudo', 'dor no peito irradiando', 'dor no braço esquerdo', 'pressão no peito', 'aperto no peito', 'queimação no peito forte',\n  // Respiratório crítico\n  'falta de ar grave', 'não consigo respirar', 'sufocando', 'cianose', 'lábios roxos', 'chiado forte', 'respiração difícil', 'engasgando',\n  // Neurológico crítico\n  'desmaio', 'desmaiou', 'perda de consciência', 'inconsciente', 'convulsão', 'confusão mental severa', 'não responde', 'avc', 'derrame',\n  // Sangramento grave\n  'sangramento intenso', 'muito sangue', 'hemorragia', 'sangue não para', 'vomitando sangue', 'sangue na urina escuro', 'sangue nas fezes escuro',\n  // Trauma grave\n  'acidente grave', 'atropelado', 'quedou de altura', 'fratura exposta', 'osso aparecendo', 'traumatismo craniano', 'cabeça bateu forte',\n  // Intoxicação\n  'envenenamento', 'intoxicação', 'overdose', 'tomei muitos remédios',\n  // Queimaduras graves\n  'queimadura extensa', 'queimou muito', 'queimadura química',\n  // Pediátrico crítico\n  'bebê não responde', 'criança azul', 'febre muito alta bebê'],\n  // LARANJA - Muito urgente\n  laranja: [\n  // Dor intensa\n  'dor no peito', 'dor forte peito', 'dor intensa', 'dor insuportável', 'dor 8', 'dor 9', 'dor 10', 'dor muito forte',\n  // Neurológico urgente\n  'dor de cabeça forte', 'enxaqueca severa', 'visão embaçada súbita', 'formigamento', 'dormência súbita', 'tontura forte',\n  // Respiratório urgente\n  'falta de ar', 'cansaço para respirar', 'chiado no peito', 'tosse com sangue', 'escarro com sangue',\n  // Gastrointestinal urgente\n  'dor abdominal forte', 'vômito com sangue', 'dor barriga intensa', 'não consigo urinar', 'muita dor urinar',\n  // Trauma ortopédico - CORRIGIDO\n  'fratura', 'osso quebrado', 'quebrou', 'quebrada', 'quebrado', 'osso quebrou', 'perna quebrada', 'braço quebrado', 'mão quebrada', 'pé quebrado', 'tornozelo quebrado', 'pulso quebrado', 'costela quebrada', 'torção grave', 'luxação', 'deslocamento', 'osso saiu do lugar', 'corte profundo', 'sangramento moderado', 'machucado grave', 'acidente de moto', 'acidente de carro', 'queda de altura', 'não consigo movimentar', 'não consigo andar', 'não consigo mexer',\n  // Infecção grave\n  'febre alta', 'febre 39', 'febre 40', 'calafrios intensos', 'infecção grave', 'vermelhidão espalhando',\n  // Oftalmológico urgente\n  'dor no olho forte', 'perda de visão súbita', 'objeto no olho'],\n  // AMARELO - Urgente moderado\n  amarelo: [\n  // Dor moderada\n  'dor moderada', 'dor 5', 'dor 6', 'dor 7', 'dor que incomoda', 'dor nas costas forte', 'dor muscular intensa',\n  // Gastrointestinal\n  'vômito', 'vomitando', 'náusea forte', 'diarreia', 'dor de barriga', 'azia forte', 'queimação estômago',\n  // Respiratório moderado\n  'tosse persistente', 'tosse seca forte', 'garganta muito dolorida',\n  // Febre\n  'febre', 'febril', 'temperatura alta', 'calafrios',\n  // Urinário\n  'dor para urinar', 'sangue na urina', 'não consegue urinar bem',\n  // Dermatológico\n  'coceira intensa', 'alergia na pele', 'inchaço', 'vermelhidão',\n  // Ortopédico moderado\n  'torção', 'entorse', 'dor articular forte', 'machucado', 'machucou', 'bati a perna', 'bati o braço', 'caí', 'cai', 'queda', 'tropeçou', 'perna doendo muito', 'braço doendo muito', 'inchaço grande', 'roxo', 'hematoma', 'não consigo apoiar', 'mancando'],\n  // VERDE - Pouco urgente\n  verde: [\n  // Dor leve\n  'dor leve', 'dor 3', 'dor 4', 'desconforto', 'incômodo',\n  // Sintomas gripais\n  'gripe', 'resfriado', 'coriza', 'espirro', 'tosse leve', 'garganta dolorida', 'mal estar',\n  // Gastrointestinal leve\n  'azia', 'queimação leve', 'gases', 'prisão de ventre',\n  // Dermatológico leve\n  'coceira', 'mancha na pele', 'espinha', 'caspa',\n  // Ortopédico leve\n  'dor nas costas leve', 'tensão muscular', 'cansaço'],\n  // AZUL - Não urgente\n  azul: [\n  // Administrativo\n  'receita', 'atestado', 'exame de rotina', 'consulta agendada', 'acompanhamento', 'resultado de exame',\n  // Prevenção\n  'vacina', 'check-up', 'prevenção', 'orientação',\n  // Sintomas muito leves\n  'dor 1', 'dor 2', 'dor muito leve', 'leve desconforto']\n};\n\n// Modificadores que podem alterar a prioridade\nconst MODIFICADORES = {\n  // Aumentam urgência\n  idade_critica: ['bebê', 'recém-nascido', 'idoso', 'gestante', 'grávida'],\n  tempo_critico: ['súbito', 'repentino', 'agora', 'de repente', 'começou agora'],\n  intensidade: ['muito', 'extremamente', 'insuportável', 'terrível', 'horrível'],\n  // Diminuem urgência\n  cronico: ['sempre', 'há muito tempo', 'crônico', 'já tinha', 'costuma ter'],\n  leve: ['um pouco', 'levemente', 'às vezes', 'suave']\n};\n\n/**\n * Função principal de análise da IA\n * @param {string} sintomas - Descrição dos sintomas do paciente\n * @param {string} alergias - Informações sobre alergias\n * @param {string} intolerancia - Informações sobre intolerâncias\n * @param {boolean} temAudio - Se foi fornecido áudio (aumenta confiabilidade)\n * @returns {Object} Resultado da análise com prioridade e detalhes\n */\nexport function analisarTriagemIA(sintomas, alergias = '', intolerancia = '', temAudio = false) {\n  // Normaliza o texto para análise\n  const textoCompleto = `${sintomas} ${alergias} ${intolerancia}`.toLowerCase();\n\n  // Inicializa pontuação para cada nível\n  let pontuacao = {\n    vermelho: 0,\n    laranja: 0,\n    amarelo: 0,\n    verde: 0,\n    azul: 0\n  };\n\n  // Análise por palavras-chave\n  Object.keys(PALAVRAS_CHAVE).forEach(nivel => {\n    PALAVRAS_CHAVE[nivel].forEach(palavra => {\n      if (textoCompleto.includes(palavra)) {\n        // Pontuação base pela palavra-chave\n        pontuacao[nivel] += NIVEIS_PRIORIDADE[nivel.toUpperCase()].peso;\n\n        // Bônus se a palavra aparece múltiplas vezes\n        const ocorrencias = (textoCompleto.match(new RegExp(palavra, 'g')) || []).length;\n        if (ocorrencias > 1) {\n          pontuacao[nivel] += (ocorrencias - 1) * 0.5;\n        }\n      }\n    });\n  });\n\n  // Aplicar modificadores\n  aplicarModificadores(textoCompleto, pontuacao);\n\n  // Bônus por ter áudio (indica mais detalhamento)\n  if (temAudio) {\n    // Aumenta levemente a confiabilidade, mas não altera drasticamente a prioridade\n    Object.keys(pontuacao).forEach(nivel => {\n      if (pontuacao[nivel] > 0) {\n        pontuacao[nivel] += 0.2;\n      }\n    });\n  }\n\n  // Determina o nível de prioridade\n  const nivelDeterminado = determinarNivelFinal(pontuacao, textoCompleto);\n\n  // Gera explicação da análise\n  const explicacao = gerarExplicacao(nivelDeterminado, pontuacao, textoCompleto);\n  return {\n    prioridade: nivelDeterminado.cor,\n    nivel: nivelDeterminado,\n    pontuacao,\n    explicacao,\n    confiabilidade: calcularConfiabilidade(pontuacao, textoCompleto.length, temAudio),\n    recomendacoes: gerarRecomendacoes(nivelDeterminado, textoCompleto)\n  };\n}\n\n/**\n * Aplica modificadores que podem alterar a urgência\n */\nfunction aplicarModificadores(texto, pontuacao) {\n  // Modificadores que aumentam urgência\n  MODIFICADORES.idade_critica.forEach(mod => {\n    if (texto.includes(mod)) {\n      pontuacao.vermelho += 1;\n      pontuacao.laranja += 0.5;\n    }\n  });\n  MODIFICADORES.tempo_critico.forEach(mod => {\n    if (texto.includes(mod)) {\n      pontuacao.vermelho += 0.5;\n      pontuacao.laranja += 0.3;\n    }\n  });\n  MODIFICADORES.intensidade.forEach(mod => {\n    if (texto.includes(mod)) {\n      pontuacao.vermelho += 0.3;\n      pontuacao.laranja += 0.5;\n      pontuacao.amarelo += 0.2;\n    }\n  });\n\n  // Modificadores que diminuem urgência\n  MODIFICADORES.cronico.forEach(mod => {\n    if (texto.includes(mod)) {\n      pontuacao.vermelho *= 0.5;\n      pontuacao.laranja *= 0.7;\n      pontuacao.amarelo *= 0.9;\n      pontuacao.verde += 0.5;\n      pontuacao.azul += 0.3;\n    }\n  });\n  MODIFICADORES.leve.forEach(mod => {\n    if (texto.includes(mod)) {\n      pontuacao.vermelho *= 0.3;\n      pontuacao.laranja *= 0.5;\n      pontuacao.verde += 0.3;\n      pontuacao.azul += 0.5;\n    }\n  });\n}\n\n/**\n * Determina o nível final baseado na pontuação\n */\nfunction determinarNivelFinal(pontuacao, texto) {\n  // Encontra o nível com maior pontuação\n  let maiorPontuacao = 0;\n  let nivelEscolhido = 'azul';\n  Object.keys(pontuacao).forEach(nivel => {\n    if (pontuacao[nivel] > maiorPontuacao) {\n      maiorPontuacao = pontuacao[nivel];\n      nivelEscolhido = nivel;\n    }\n  });\n\n  // Regras de segurança - se não há sintomas claros, assume não urgente\n  if (maiorPontuacao === 0 || texto.trim().length < 10) {\n    nivelEscolhido = 'azul';\n  }\n\n  // Regra de precaução - se há múltiplos indicadores de urgência\n  if (pontuacao.vermelho > 1 && pontuacao.laranja > 1) {\n    nivelEscolhido = 'vermelho';\n  }\n  return NIVEIS_PRIORIDADE[nivelEscolhido.toUpperCase()];\n}\n\n/**\n * Calcula a confiabilidade da análise\n */\nfunction calcularConfiabilidade(pontuacao, tamanhoTexto, temAudio) {\n  const somaPontuacao = Object.values(pontuacao).reduce((a, b) => a + b, 0);\n  const detalhamento = Math.min(tamanhoTexto / 100, 1); // 0 a 1\n  const audioBonus = temAudio ? 0.1 : 0;\n  let confiabilidade = somaPontuacao / 10 + detalhamento + audioBonus;\n  return Math.min(Math.max(confiabilidade, 0.3), 0.95); // Entre 30% e 95%\n}\n\n/**\n * Gera explicação da análise para transparência\n */\nfunction gerarExplicacao(nivel, pontuacao, texto) {\n  const indicadores = [];\n\n  // Identifica os principais indicadores encontrados\n  Object.keys(PALAVRAS_CHAVE).forEach(nivelNome => {\n    PALAVRAS_CHAVE[nivelNome].forEach(palavra => {\n      if (texto.includes(palavra) && pontuacao[nivelNome] > 0) {\n        indicadores.push(`\"${palavra}\" (${nivelNome})`);\n      }\n    });\n  });\n  return {\n    nivelDeterminado: `${nivel.cor.toUpperCase()} - ${nivel.significado}`,\n    principais_indicadores: indicadores.slice(0, 5),\n    // Top 5\n    tempo_atendimento: nivel.tempo,\n    justificativa: `Baseado na análise dos sintomas, foram identificados indicadores de prioridade ${nivel.cor}.`\n  };\n}\n\n/**\n * Gera recomendações específicas baseadas no nível\n */\nfunction gerarRecomendacoes(nivel, texto) {\n  const recomendacoes = [];\n  switch (nivel.cor) {\n    case 'vermelho':\n      recomendacoes.push('🚨 PROCURE ATENDIMENTO IMEDIATO');\n      recomendacoes.push('🏥 Dirija-se ao pronto-socorro agora');\n      recomendacoes.push('📞 Considere chamar ambulância (SAMU 192)');\n      recomendacoes.push('⚠️ Não dirija sozinho se possível');\n      break;\n    case 'laranja':\n      recomendacoes.push('🏥 Procure atendimento médico urgente');\n      recomendacoes.push('⏰ Não aguarde mais de 10 minutos');\n      recomendacoes.push('📱 Mantenha contato com familiar/responsável');\n      break;\n    case 'amarelo':\n      recomendacoes.push('🏥 Procure atendimento médico');\n      recomendacoes.push('⏰ Atendimento em até 50 minutos');\n      recomendacoes.push('💊 Evite medicação por conta própria');\n      break;\n    case 'verde':\n      recomendacoes.push('🏥 Atendimento médico recomendado');\n      recomendacoes.push('⏰ Aguarde atendimento em até 2 horas');\n      recomendacoes.push('💧 Mantenha-se hidratado');\n      recomendacoes.push('😌 Permaneça calmo e descanse');\n      break;\n    case 'azul':\n      recomendacoes.push('📋 Atendimento não urgente');\n      recomendacoes.push('📅 Pode agendar consulta');\n      recomendacoes.push('💡 Considere cuidados caseiros apropriados');\n      break;\n  }\n  return recomendacoes;\n}\n\n// Função auxiliar para formatar tempo\nexport function formatarTempo(tempoEstimado) {\n  if (tempoEstimado === '00:00') return 'Imediato';\n  if (tempoEstimado.includes(':')) {\n    const [horas, minutos] = tempoEstimado.split(':').map(Number);\n    if (horas > 0) {\n      return `${horas}h${minutos > 0 ? ` ${minutos}min` : ''}`;\n    }\n    return `${minutos} min`;\n  }\n  return tempoEstimado;\n}\n\n// Exporta cores para uso nos componentes\nexport const CORES_PRIORIDADE = {\n  vermelho: '#d13636',\n  laranja: '#ff6b35',\n  amarelo: '#ffc107',\n  verde: '#28a745',\n  azul: '#007bff'\n};","map":{"version":3,"names":["NIVEIS_PRIORIDADE","VERMELHO","cor","significado","tempo","tempoEstimado","exemplo","peso","LARANJA","AMARELO","VERDE","AZUL","PALAVRAS_CHAVE","vermelho","laranja","amarelo","verde","azul","MODIFICADORES","idade_critica","tempo_critico","intensidade","cronico","leve","analisarTriagemIA","sintomas","alergias","intolerancia","temAudio","textoCompleto","toLowerCase","pontuacao","Object","keys","forEach","nivel","palavra","includes","toUpperCase","ocorrencias","match","RegExp","length","aplicarModificadores","nivelDeterminado","determinarNivelFinal","explicacao","gerarExplicacao","prioridade","confiabilidade","calcularConfiabilidade","recomendacoes","gerarRecomendacoes","texto","mod","maiorPontuacao","nivelEscolhido","trim","tamanhoTexto","somaPontuacao","values","reduce","a","b","detalhamento","Math","min","audioBonus","max","indicadores","nivelNome","push","principais_indicadores","slice","tempo_atendimento","justificativa","formatarTempo","horas","minutos","split","map","Number","CORES_PRIORIDADE"],"sources":["/home/gustavo/code/pulsafe/src/utils/triagemAI.js"],"sourcesContent":["/**\n * Sistema de IA para Triagem Médica\n * Baseado no Sistema Manchester de Classificação de Risco\n * 5 níveis de prioridade conforme protocolo hospitalar\n */\n\n// Definição dos níveis de prioridade\nexport const NIVEIS_PRIORIDADE = {\n  VERMELHO: {\n    cor: 'vermelho',\n    significado: 'Emergência absoluta',\n    tempo: 'Imediato',\n    tempoEstimado: '00:00',\n    exemplo: 'Parada cardíaca, falta de ar grave, sangramento intenso, perda de consciência',\n    peso: 5\n  },\n  LARANJA: {\n    cor: 'laranja',\n    significado: 'Muito urgente',\n    tempo: 'Até 10 min',\n    tempoEstimado: '10:00',\n    exemplo: 'Dor no peito forte, AVC em andamento, fratura exposta, queimadura grave',\n    peso: 4\n  },\n  AMARELO: {\n    cor: 'amarelo',\n    significado: 'Urgente moderado',\n    tempo: 'Até 50 min',\n    tempoEstimado: '50:00',\n    exemplo: 'Febre alta com mal-estar, dor intensa mas estável, pequenos cortes com sangramento controlado',\n    peso: 3\n  },\n  VERDE: {\n    cor: 'verde',\n    significado: 'Pouco urgente',\n    tempo: 'Até 2 horas',\n    tempoEstimado: '120:00',\n    exemplo: 'Dor leve, sintomas gripais, pequenas torções',\n    peso: 2\n  },\n  AZUL: {\n    cor: 'azul',\n    significado: 'Não urgente',\n    tempo: 'Até 4 horas',\n    tempoEstimado: '240:00',\n    exemplo: 'Pedido de receita, curativo simples, consulta de acompanhamento',\n    peso: 1\n  }\n};\n\n// Palavras-chave categorizadas por nível de emergência\nconst PALAVRAS_CHAVE = {\n  // VERMELHO - Emergência absoluta\n  vermelho: [\n    // Cardiovascular crítico\n    'parada cardíaca', 'infarto', 'infarto agudo', 'dor no peito irradiando', 'dor no braço esquerdo',\n    'pressão no peito', 'aperto no peito', 'queimação no peito forte',\n    \n    // Respiratório crítico\n    'falta de ar grave', 'não consigo respirar', 'sufocando', 'cianose', 'lábios roxos',\n    'chiado forte', 'respiração difícil', 'engasgando',\n    \n    // Neurológico crítico\n    'desmaio', 'desmaiou', 'perda de consciência', 'inconsciente', 'convulsão',\n    'confusão mental severa', 'não responde', 'avc', 'derrame',\n    \n    // Sangramento grave\n    'sangramento intenso', 'muito sangue', 'hemorragia', 'sangue não para',\n    'vomitando sangue', 'sangue na urina escuro', 'sangue nas fezes escuro',\n    \n    // Trauma grave\n    'acidente grave', 'atropelado', 'quedou de altura', 'fratura exposta',\n    'osso aparecendo', 'traumatismo craniano', 'cabeça bateu forte',\n    \n    // Intoxicação\n    'envenenamento', 'intoxicação', 'overdose', 'tomei muitos remédios',\n    \n    // Queimaduras graves\n    'queimadura extensa', 'queimou muito', 'queimadura química',\n    \n    // Pediátrico crítico\n    'bebê não responde', 'criança azul', 'febre muito alta bebê'\n  ],\n\n  // LARANJA - Muito urgente\n  laranja: [\n    // Dor intensa\n    'dor no peito', 'dor forte peito', 'dor intensa', 'dor insuportável',\n    'dor 8', 'dor 9', 'dor 10', 'dor muito forte',\n    \n    // Neurológico urgente\n    'dor de cabeça forte', 'enxaqueca severa', 'visão embaçada súbita',\n    'formigamento', 'dormência súbita', 'tontura forte',\n    \n    // Respiratório urgente\n    'falta de ar', 'cansaço para respirar', 'chiado no peito',\n    'tosse com sangue', 'escarro com sangue',\n    \n    // Gastrointestinal urgente\n    'dor abdominal forte', 'vômito com sangue', 'dor barriga intensa',\n    'não consigo urinar', 'muita dor urinar',\n    \n    // Trauma ortopédico - CORRIGIDO\n    'fratura', 'osso quebrado', 'quebrou', 'quebrada', 'quebrado', 'osso quebrou',\n    'perna quebrada', 'braço quebrado', 'mão quebrada', 'pé quebrado',\n    'tornozelo quebrado', 'pulso quebrado', 'costela quebrada',\n    'torção grave', 'luxação', 'deslocamento', 'osso saiu do lugar',\n    'corte profundo', 'sangramento moderado', 'machucado grave',\n    'acidente de moto', 'acidente de carro', 'queda de altura',\n    'não consigo movimentar', 'não consigo andar', 'não consigo mexer',\n    \n    // Infecção grave\n    'febre alta', 'febre 39', 'febre 40', 'calafrios intensos',\n    'infecção grave', 'vermelhidão espalhando',\n    \n    // Oftalmológico urgente\n    'dor no olho forte', 'perda de visão súbita', 'objeto no olho'\n  ],\n\n  // AMARELO - Urgente moderado\n  amarelo: [\n    // Dor moderada\n    'dor moderada', 'dor 5', 'dor 6', 'dor 7', 'dor que incomoda',\n    'dor nas costas forte', 'dor muscular intensa',\n    \n    // Gastrointestinal\n    'vômito', 'vomitando', 'náusea forte', 'diarreia', 'dor de barriga',\n    'azia forte', 'queimação estômago',\n    \n    // Respiratório moderado\n    'tosse persistente', 'tosse seca forte', 'garganta muito dolorida',\n    \n    // Febre\n    'febre', 'febril', 'temperatura alta', 'calafrios',\n    \n    // Urinário\n    'dor para urinar', 'sangue na urina', 'não consegue urinar bem',\n    \n    // Dermatológico\n    'coceira intensa', 'alergia na pele', 'inchaço', 'vermelhidão',\n    \n    // Ortopédico moderado\n    'torção', 'entorse', 'dor articular forte', 'machucado', 'machucou',\n    'bati a perna', 'bati o braço', 'caí', 'cai', 'queda', 'tropeçou',\n    'perna doendo muito', 'braço doendo muito', 'inchaço grande',\n    'roxo', 'hematoma', 'não consigo apoiar', 'mancando'\n  ],\n\n  // VERDE - Pouco urgente\n  verde: [\n    // Dor leve\n    'dor leve', 'dor 3', 'dor 4', 'desconforto', 'incômodo',\n    \n    // Sintomas gripais\n    'gripe', 'resfriado', 'coriza', 'espirro', 'tosse leve',\n    'garganta dolorida', 'mal estar',\n    \n    // Gastrointestinal leve\n    'azia', 'queimação leve', 'gases', 'prisão de ventre',\n    \n    // Dermatológico leve\n    'coceira', 'mancha na pele', 'espinha', 'caspa',\n    \n    // Ortopédico leve\n    'dor nas costas leve', 'tensão muscular', 'cansaço'\n  ],\n\n  // AZUL - Não urgente\n  azul: [\n    // Administrativo\n    'receita', 'atestado', 'exame de rotina', 'consulta agendada',\n    'acompanhamento', 'resultado de exame',\n    \n    // Prevenção\n    'vacina', 'check-up', 'prevenção', 'orientação',\n    \n    // Sintomas muito leves\n    'dor 1', 'dor 2', 'dor muito leve', 'leve desconforto'\n  ]\n};\n\n// Modificadores que podem alterar a prioridade\nconst MODIFICADORES = {\n  // Aumentam urgência\n  idade_critica: ['bebê', 'recém-nascido', 'idoso', 'gestante', 'grávida'],\n  tempo_critico: ['súbito', 'repentino', 'agora', 'de repente', 'começou agora'],\n  intensidade: ['muito', 'extremamente', 'insuportável', 'terrível', 'horrível'],\n  \n  // Diminuem urgência\n  cronico: ['sempre', 'há muito tempo', 'crônico', 'já tinha', 'costuma ter'],\n  leve: ['um pouco', 'levemente', 'às vezes', 'suave']\n};\n\n/**\n * Função principal de análise da IA\n * @param {string} sintomas - Descrição dos sintomas do paciente\n * @param {string} alergias - Informações sobre alergias\n * @param {string} intolerancia - Informações sobre intolerâncias\n * @param {boolean} temAudio - Se foi fornecido áudio (aumenta confiabilidade)\n * @returns {Object} Resultado da análise com prioridade e detalhes\n */\nexport function analisarTriagemIA(sintomas, alergias = '', intolerancia = '', temAudio = false) {\n  // Normaliza o texto para análise\n  const textoCompleto = `${sintomas} ${alergias} ${intolerancia}`.toLowerCase();\n  \n  // Inicializa pontuação para cada nível\n  let pontuacao = {\n    vermelho: 0,\n    laranja: 0,\n    amarelo: 0,\n    verde: 0,\n    azul: 0\n  };\n\n  // Análise por palavras-chave\n  Object.keys(PALAVRAS_CHAVE).forEach(nivel => {\n    PALAVRAS_CHAVE[nivel].forEach(palavra => {\n      if (textoCompleto.includes(palavra)) {\n        // Pontuação base pela palavra-chave\n        pontuacao[nivel] += NIVEIS_PRIORIDADE[nivel.toUpperCase()].peso;\n        \n        // Bônus se a palavra aparece múltiplas vezes\n        const ocorrencias = (textoCompleto.match(new RegExp(palavra, 'g')) || []).length;\n        if (ocorrencias > 1) {\n          pontuacao[nivel] += (ocorrencias - 1) * 0.5;\n        }\n      }\n    });\n  });\n\n  // Aplicar modificadores\n  aplicarModificadores(textoCompleto, pontuacao);\n\n  // Bônus por ter áudio (indica mais detalhamento)\n  if (temAudio) {\n    // Aumenta levemente a confiabilidade, mas não altera drasticamente a prioridade\n    Object.keys(pontuacao).forEach(nivel => {\n      if (pontuacao[nivel] > 0) {\n        pontuacao[nivel] += 0.2;\n      }\n    });\n  }\n\n  // Determina o nível de prioridade\n  const nivelDeterminado = determinarNivelFinal(pontuacao, textoCompleto);\n  \n  // Gera explicação da análise\n  const explicacao = gerarExplicacao(nivelDeterminado, pontuacao, textoCompleto);\n  \n  return {\n    prioridade: nivelDeterminado.cor,\n    nivel: nivelDeterminado,\n    pontuacao,\n    explicacao,\n    confiabilidade: calcularConfiabilidade(pontuacao, textoCompleto.length, temAudio),\n    recomendacoes: gerarRecomendacoes(nivelDeterminado, textoCompleto)\n  };\n}\n\n/**\n * Aplica modificadores que podem alterar a urgência\n */\nfunction aplicarModificadores(texto, pontuacao) {\n  // Modificadores que aumentam urgência\n  MODIFICADORES.idade_critica.forEach(mod => {\n    if (texto.includes(mod)) {\n      pontuacao.vermelho += 1;\n      pontuacao.laranja += 0.5;\n    }\n  });\n\n  MODIFICADORES.tempo_critico.forEach(mod => {\n    if (texto.includes(mod)) {\n      pontuacao.vermelho += 0.5;\n      pontuacao.laranja += 0.3;\n    }\n  });\n\n  MODIFICADORES.intensidade.forEach(mod => {\n    if (texto.includes(mod)) {\n      pontuacao.vermelho += 0.3;\n      pontuacao.laranja += 0.5;\n      pontuacao.amarelo += 0.2;\n    }\n  });\n\n  // Modificadores que diminuem urgência\n  MODIFICADORES.cronico.forEach(mod => {\n    if (texto.includes(mod)) {\n      pontuacao.vermelho *= 0.5;\n      pontuacao.laranja *= 0.7;\n      pontuacao.amarelo *= 0.9;\n      pontuacao.verde += 0.5;\n      pontuacao.azul += 0.3;\n    }\n  });\n\n  MODIFICADORES.leve.forEach(mod => {\n    if (texto.includes(mod)) {\n      pontuacao.vermelho *= 0.3;\n      pontuacao.laranja *= 0.5;\n      pontuacao.verde += 0.3;\n      pontuacao.azul += 0.5;\n    }\n  });\n}\n\n/**\n * Determina o nível final baseado na pontuação\n */\nfunction determinarNivelFinal(pontuacao, texto) {\n  // Encontra o nível com maior pontuação\n  let maiorPontuacao = 0;\n  let nivelEscolhido = 'azul';\n\n  Object.keys(pontuacao).forEach(nivel => {\n    if (pontuacao[nivel] > maiorPontuacao) {\n      maiorPontuacao = pontuacao[nivel];\n      nivelEscolhido = nivel;\n    }\n  });\n\n  // Regras de segurança - se não há sintomas claros, assume não urgente\n  if (maiorPontuacao === 0 || texto.trim().length < 10) {\n    nivelEscolhido = 'azul';\n  }\n\n  // Regra de precaução - se há múltiplos indicadores de urgência\n  if (pontuacao.vermelho > 1 && pontuacao.laranja > 1) {\n    nivelEscolhido = 'vermelho';\n  }\n\n  return NIVEIS_PRIORIDADE[nivelEscolhido.toUpperCase()];\n}\n\n/**\n * Calcula a confiabilidade da análise\n */\nfunction calcularConfiabilidade(pontuacao, tamanhoTexto, temAudio) {\n  const somaPontuacao = Object.values(pontuacao).reduce((a, b) => a + b, 0);\n  const detalhamento = Math.min(tamanhoTexto / 100, 1); // 0 a 1\n  const audioBonus = temAudio ? 0.1 : 0;\n  \n  let confiabilidade = (somaPontuacao / 10) + detalhamento + audioBonus;\n  return Math.min(Math.max(confiabilidade, 0.3), 0.95); // Entre 30% e 95%\n}\n\n/**\n * Gera explicação da análise para transparência\n */\nfunction gerarExplicacao(nivel, pontuacao, texto) {\n  const indicadores = [];\n  \n  // Identifica os principais indicadores encontrados\n  Object.keys(PALAVRAS_CHAVE).forEach(nivelNome => {\n    PALAVRAS_CHAVE[nivelNome].forEach(palavra => {\n      if (texto.includes(palavra) && pontuacao[nivelNome] > 0) {\n        indicadores.push(`\"${palavra}\" (${nivelNome})`);\n      }\n    });\n  });\n\n  return {\n    nivelDeterminado: `${nivel.cor.toUpperCase()} - ${nivel.significado}`,\n    principais_indicadores: indicadores.slice(0, 5), // Top 5\n    tempo_atendimento: nivel.tempo,\n    justificativa: `Baseado na análise dos sintomas, foram identificados indicadores de prioridade ${nivel.cor}.`\n  };\n}\n\n/**\n * Gera recomendações específicas baseadas no nível\n */\nfunction gerarRecomendacoes(nivel, texto) {\n  const recomendacoes = [];\n\n  switch (nivel.cor) {\n    case 'vermelho':\n      recomendacoes.push('🚨 PROCURE ATENDIMENTO IMEDIATO');\n      recomendacoes.push('🏥 Dirija-se ao pronto-socorro agora');\n      recomendacoes.push('📞 Considere chamar ambulância (SAMU 192)');\n      recomendacoes.push('⚠️ Não dirija sozinho se possível');\n      break;\n      \n    case 'laranja':\n      recomendacoes.push('🏥 Procure atendimento médico urgente');\n      recomendacoes.push('⏰ Não aguarde mais de 10 minutos');\n      recomendacoes.push('📱 Mantenha contato com familiar/responsável');\n      break;\n      \n    case 'amarelo':\n      recomendacoes.push('🏥 Procure atendimento médico');\n      recomendacoes.push('⏰ Atendimento em até 50 minutos');\n      recomendacoes.push('💊 Evite medicação por conta própria');\n      break;\n      \n    case 'verde':\n      recomendacoes.push('🏥 Atendimento médico recomendado');\n      recomendacoes.push('⏰ Aguarde atendimento em até 2 horas');\n      recomendacoes.push('💧 Mantenha-se hidratado');\n      recomendacoes.push('😌 Permaneça calmo e descanse');\n      break;\n      \n    case 'azul':\n      recomendacoes.push('📋 Atendimento não urgente');\n      recomendacoes.push('📅 Pode agendar consulta');\n      recomendacoes.push('💡 Considere cuidados caseiros apropriados');\n      break;\n  }\n\n  return recomendacoes;\n}\n\n// Função auxiliar para formatar tempo\nexport function formatarTempo(tempoEstimado) {\n  if (tempoEstimado === '00:00') return 'Imediato';\n  if (tempoEstimado.includes(':')) {\n    const [horas, minutos] = tempoEstimado.split(':').map(Number);\n    if (horas > 0) {\n      return `${horas}h${minutos > 0 ? ` ${minutos}min` : ''}`;\n    }\n    return `${minutos} min`;\n  }\n  return tempoEstimado;\n}\n\n// Exporta cores para uso nos componentes\nexport const CORES_PRIORIDADE = {\n  vermelho: '#d13636',\n  laranja: '#ff6b35',\n  amarelo: '#ffc107',\n  verde: '#28a745',\n  azul: '#007bff'\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}